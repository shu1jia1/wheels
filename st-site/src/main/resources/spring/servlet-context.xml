<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
		   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                  http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
      ">
    <description>Spring MVC Configuration</description>
    <!-- <mvc:annotation-driven> <mvc:message-converters> <bean class="org.springframework.http.converter.json.GsonHttpMessageConverter">
        <property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value>
        </list> </property> </bean> </mvc:message-converters> </mvc:annotation-driven> -->
    <context:property-placeholder location="classpath:web.properties" />
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.github.shu1jia1.site.base.BaseObjectMapper">
                        <constructor-arg name="pattern" value="yyyy-MM-dd HH:mm:ss">
                        </constructor-arg>
                        <!-- <property name="dateFormat"> <bean class="java.text.SimpleDateFormat">
                            <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" /> </bean>
                            </property> -->
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean class="com.github.shu1jia1.site.base.annotation.TokenMethodArgumentResolver"></bean>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true" />
        <property name="favorParameter" value="false" />
        <property name="ignoreAcceptHeader" value="true" />
        <property name="defaultContentType" value="text/html" />
        <!-- <property name="mediaTypes"> <value> json=application/json xml=application/xml
            </value> </property> -->
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
            </map>
        </property>
    </bean>

    <!-- 完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
    <!-- <mvc:velocity-configurer resource-loader-path="/WEB-INF/vm/,classpath:com/github/zhangkaitao"
        /> <mvc:groovy-configurer resource-loader-path="classpath:templates/" cache-templates="false"
        /> <mvc:view-resolvers> <mvc:content-negotiation> <mvc:default-views> <bean
        class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
        <property name="jsonpParameterNames"> <set> <value>jsonp</value> <value>callback</value>
        </set> </property> </bean> </mvc:default-views> </mvc:content-negotiation>
        <mvc:velocity cache-views="false" prefix="" suffix=".vm" /> <mvc:groovy cache-views="false"
        suffix=".tpl" /> </mvc:view-resolvers> -->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    <!-- JSP视图文件解析配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".html" />
        <property name="order" value="1" />
    </bean>


    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    </bean>
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!-- 国际化信息所在的文件名 -->
        <property name="basename" value="messages" />
        <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称 -->
        <property name="useCodeAsDefaultMessage" value="true" />
    </bean>

    <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
    <mvc:interceptors>
        <bean class="com.github.shu1jia1.site.base.page.interceptor.SpringPagingInterceptor" />
        <!-- <bean class="SecurityInterceptor">
            </bean> -->
    </mvc:interceptors>

    <mvc:redirect-view-controller path="/redirect" redirect-url="/status"
        context-relative="true" status-code="301" keep-query-params="true" />
    <mvc:status-controller path="/status" status-code="200" />

    <mvc:view-controller path="/error/**" status-code="200" />

    <mvc:default-servlet-handler />

    <!-- 对静态资源文件的访问，交给default servlet handler处理 -->
    <mvc:resources mapping="/*.js" location="/"></mvc:resources>
    <mvc:resources mapping="/frm/*.js" location="/frm/"></mvc:resources>
    <mvc:resources mapping="/image/**" location="/image/"></mvc:resources>
    <mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>
    <mvc:resources mapping="*.html" location="/"></mvc:resources>
    <mvc:resources mapping="/data/**" location="/data/"></mvc:resources>
    <bean id="pagrInterceptorBean" class="com.github.shu1jia1.site.base.page.interceptor.SpringPagingInterceptor">
    </bean>

    <aop:config>
        <aop:aspect id="aroundExample" ref="pagrInterceptorBean">
            <aop:pointcut id="query"
                expression="execution(* com.github.shu1jia1.site.modules..mvc.*.*(..))" />
            <aop:around pointcut-ref="query" method="doBasicProfiling" />
        </aop:aspect>
    </aop:config>

    <!-- 配置扫描路径,扫描Controller -->
    <context:component-scan base-package="com.github.shu1jia1.site">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>
</beans>